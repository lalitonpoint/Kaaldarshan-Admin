<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>AWS Billing Dashboard</title>
  <style>
    body {
      font-family: 'Segoe UI', sans-serif;
      background: #f4f6f8;
      padding: 40px;
      color: #222;
      margin: 0;
    }

    h2 {
      text-align: center;
      font-size: 32px;
      color: #2c7be5;
      margin-bottom: 20px;
    }

    .date-inputs {
      display: flex;
      justify-content: center;
      align-items: center;
      gap: 10px;
      margin-bottom: 20px;
      flex-wrap: wrap;
    }

    .date-inputs input {
      padding: 10px 14px;
      border-radius: 6px;
      border: 1px solid #ccc;
      font-size: 15px;
    }

    .btn {
      background: #2c7be5;
      color: #fff;
      padding: 10px 20px;
      border: none;
      border-radius: 6px;
      cursor: pointer;
      font-size: 15px;
      transition: background 0.3s;
    }

    .btn:hover {
      background: #1a5fc8;
    }

    .card {
      background: #fff;
      padding: 25px;
      margin: 20px auto;
      border-radius: 10px;
      box-shadow: 0 6px 20px rgba(0, 0, 0, 0.05);
      max-width: 960px;
    }

    h3 {
      font-size: 20px;
      color: #2c7be5;
      margin-bottom: 15px;
    }

    table {
      width: 100%;
      border-collapse: collapse;
      font-size: 15px;
    }

    th, td {
      padding: 12px;
      border: 1px solid #e0e0e0;
      text-align: left;
    }

    th {
      background-color: #2c7be5;
      color: white;
    }

    tr:hover {
      background-color: #f1f1f1;
    }

    tr:nth-child(even) {
      background-color: #f9f9f9;
    }

    .info-text {
      text-align: center;
      font-size: 15px;
      color: #444;
      margin-bottom: 20px;
    }

    .badge {
      display: inline-block;
      padding: 5px 12px;
      background-color: #d1e9ff;
      color: #0366d6;
      border-radius: 20px;
      font-size: 14px;
    }

    @media (max-width: 768px) {
      .card {
        padding: 15px;
      }
      .date-inputs {
        flex-direction: column;
      }
    }
  </style>
</head>
<body>

  <h2>AWS Billing Dashboard</h2>

  <div class="date-inputs">
    <input type="date" id="startDate" />
    <input type="date" id="endDate" />
    <button class="btn" id="fetchBtn" onclick="fetchBillingData()">Fetch from AWS</button>
  </div>

  <div class="info-text" id="dataRangeInfo"></div>

  <div id="billingContent" style="display:none;">
    <div class="card">
      <h3>Summary</h3>
      <p><strong>Total Cost:</strong> <span id="totalCost">-</span></p>
      <p><strong>Paid:</strong> <span id="paidAmount">-</span></p>
      <p><strong>Remaining:</strong> <span id="remainingAmount">-</span></p>
    </div>

    <div class="card">
      <h3>Service-wise Breakdown</h3>
      <table id="serviceTable">
        <thead>
          <tr><th>Service</th><th>Amount (USD)</th></tr>
        </thead>
        <tbody></tbody>
      </table>
    </div>

    <div class="card">
      <h3>Daily Usage</h3>
      <table id="dailyTable">
        <thead>
          <tr><th>Date</th><th>Amount (USD)</th></tr>
        </thead>
        <tbody></tbody>
      </table>
    </div>
  </div>

  <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
  <script>
    document.addEventListener("DOMContentLoaded", function () {
      const today = new Date().toISOString().split("T")[0];
      const startInput = document.getElementById("startDate");
      const endInput = document.getElementById("endDate");
      const fetchBtn = document.getElementById("fetchBtn");

      startInput.setAttribute("max", today);
      endInput.setAttribute("max", today);
      fetchBtn.disabled = true;

      startInput.addEventListener("change", validateDates);
      endInput.addEventListener("change", validateDates);

      function validateDates() {
        fetchBtn.disabled = !(startInput.value && endInput.value);
      }

      // Load existing billing data from DB on page load
      $.ajax({
        url: "user/get_aws_billing_data_from_db/",
        method: "POST",
        success: function (data) {
          if (data.success) {
            $('#billingContent').show();
            if (data.start_date) $('#startDate').val(data.start_date);
            if (data.end_date) $('#endDate').val(data.end_date);
           if (data.start_date && data.end_date) {
            const startFormatted = new Date(data.start_date).toLocaleDateString("en-US", { year: 'numeric', month: 'long', day: 'numeric' });
            const endFormatted = new Date(data.end_date).toLocaleDateString("en-US", { year: 'numeric', month: 'long', day: 'numeric' });

            $('#dataRangeInfo').html(`<span class="badge">You previously fetched billing data from ${startFormatted} to ${endFormatted}.</span>`);
            fetchBtn.disabled = false;
          }

            displayBillingData(data);
          }
        }
      });
    });

    function fetchBillingData() {
      const start = $('#startDate').val();
      const end = $('#endDate').val();
      if (!start || !end) return alert("Please select both start and end dates.");

      $.ajax({
        url: "user/billing_details/",
        method: "POST",
        data: { startDate: start, endDate: end },
        success: function (data) {
          if (data.success) {
            $('#billingContent').show();
            $('#dataRangeInfo').html(`<span class="badge">You currently fetched billing data from Data from ${start} to ${end}</span>`);
            displayBillingData(data);
          } else {
            alert("Failed to fetch: " + data.message);
          }
        },
        error: function () {
          alert("Error fetching AWS billing data.");
        }
      });
    }

    function displayBillingData(data) {
      $('#totalCost').text(`$${parseFloat(data.totalCost.Amount).toFixed(2)} USD`);
      $('#paidAmount').text(data.paidAmount ? `$${parseFloat(data.paidAmount.amount).toFixed(2)} USD` : 'N/A');
      $('#remainingAmount').text(data.remainingAmount ? `$${parseFloat(data.remainingAmount.amount).toFixed(2)} USD` : 'N/A');

      const $serviceTbody = $("#serviceTable tbody").empty();
      data.serviceBreakdown.forEach(item => {
        $serviceTbody.append(`<tr><td>${item.service}</td><td>$${parseFloat(item.amount).toFixed(2)}</td></tr>`);
      });

      const $dailyTbody = $("#dailyTable tbody").empty();
      data.dailyBreakdown.forEach(day => {
        $dailyTbody.append(`<tr><td>${day.date}</td><td>$${parseFloat(day.amount).toFixed(2)}</td></tr>`);
      });
    }
  </script>

</body>
</html>
